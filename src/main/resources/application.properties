
spring.main.banner-mode=off
logging.level.org.springframework=ERROR


#Load database that is not embedded
spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/training_db
spring.datasource.username=postgres
spring.datasource.password=password

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Let Spring create the tables for now, tables are created by spring jpa from our entities
#spring.jpa.hibernate.ddl-auto=update

#turn off the automatic schema creation, and use the existing database tables
#values: none, validate, update ,create, create-drop(unit testing)
spring.jpa.hibernate.ddl-auto=validate
#none: column user0_.customer_id does not exist


# to avoid issue: java.sql.SQLFeatureNotSupportedException:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

springdoc.swagger-ui.path=/swagger-ui.html

# Open Docker Desktop App to start postgress database: 
# on CMD/power shell:
# >cd <directory where docker-compose.yml is >
# >docker-compose up -d  
#
#http://localhost:9090/?pgsql=postgres&username=postgres&db=training_db